<?php

declare(strict_types=1);

/*
 * ApimaticAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApimaticAPILib\Models;

use stdClass;

/**
 * The API Entity Structure encapsulates all the details of an API Entity. An API entity is a unique
 * API Version.
 */
class ApiEntity implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var string
     */
    private $encryptedId;

    /**
     * @var string
     */
    private $apiKey;

    /**
     * @var string
     */
    private $apiGroupId;

    /**
     * @var string
     */
    private $imageUri;

    /**
     * @var string
     */
    private $creationDate;

    /**
     * @var bool
     */
    private $public;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string
     */
    private $version;

    /**
     * @var string[]
     */
    private $additionalHeaders;

    /**
     * @var Authentication
     */
    private $authentication;

    /**
     * @var CodeGenSettings
     */
    private $codeGenSettings;

    /**
     * @var TestGenSettings
     */
    private $testGenSettings;

    /**
     * @var string[]
     */
    private $errors;

    /**
     * @var ServerConfiguration
     */
    private $serverConfiguration;

    /**
     * @var EndpointsGroup[]
     */
    private $endpointsGroup;

    /**
     * @var MetaData
     */
    private $metaData;

    /**
     * @param string $id
     * @param string $encryptedId
     * @param string $apiKey
     * @param string $apiGroupId
     * @param string $imageUri
     * @param string $creationDate
     * @param bool $public
     * @param string $name
     * @param string $description
     * @param string $version
     * @param string[] $additionalHeaders
     * @param Authentication $authentication
     * @param CodeGenSettings $codeGenSettings
     * @param TestGenSettings $testGenSettings
     * @param string[] $errors
     * @param ServerConfiguration $serverConfiguration
     * @param EndpointsGroup[] $endpointsGroup
     * @param MetaData $metaData
     */
    public function __construct(
        string $id,
        string $encryptedId,
        string $apiKey,
        string $apiGroupId,
        string $imageUri,
        string $creationDate,
        bool $public,
        string $name,
        string $description,
        string $version,
        array $additionalHeaders,
        Authentication $authentication,
        CodeGenSettings $codeGenSettings,
        TestGenSettings $testGenSettings,
        array $errors,
        ServerConfiguration $serverConfiguration,
        array $endpointsGroup,
        MetaData $metaData
    ) {
        $this->id = $id;
        $this->encryptedId = $encryptedId;
        $this->apiKey = $apiKey;
        $this->apiGroupId = $apiGroupId;
        $this->imageUri = $imageUri;
        $this->creationDate = $creationDate;
        $this->public = $public;
        $this->name = $name;
        $this->description = $description;
        $this->version = $version;
        $this->additionalHeaders = $additionalHeaders;
        $this->authentication = $authentication;
        $this->codeGenSettings = $codeGenSettings;
        $this->testGenSettings = $testGenSettings;
        $this->errors = $errors;
        $this->serverConfiguration = $serverConfiguration;
        $this->endpointsGroup = $endpointsGroup;
        $this->metaData = $metaData;
    }

    /**
     * Returns Id.
     * Unique API Entity identifier
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Unique API Entity identifier
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Encrypted Id.
     * Enrcypted API Entity Id
     */
    public function getEncryptedId(): string
    {
        return $this->encryptedId;
    }

    /**
     * Sets Encrypted Id.
     * Enrcypted API Entity Id
     *
     * @required
     * @maps encryptedId
     */
    public function setEncryptedId(string $encryptedId): void
    {
        $this->encryptedId = $encryptedId;
    }

    /**
     * Returns Api Key.
     * API Integration Key. Obtain from API Card on Dashboard.
     */
    public function getApiKey(): string
    {
        return $this->apiKey;
    }

    /**
     * Sets Api Key.
     * API Integration Key. Obtain from API Card on Dashboard.
     *
     * @required
     * @maps apiKey
     */
    public function setApiKey(string $apiKey): void
    {
        $this->apiKey = $apiKey;
    }

    /**
     * Returns Api Group Id.
     * Unique API Group Identifier
     */
    public function getApiGroupId(): string
    {
        return $this->apiGroupId;
    }

    /**
     * Sets Api Group Id.
     * Unique API Group Identifier
     *
     * @required
     * @maps apiGroupId
     */
    public function setApiGroupId(string $apiGroupId): void
    {
        $this->apiGroupId = $apiGroupId;
    }

    /**
     * Returns Image Uri.
     * Cover Image
     */
    public function getImageUri(): string
    {
        return $this->imageUri;
    }

    /**
     * Sets Image Uri.
     * Cover Image
     *
     * @required
     * @maps imageUri
     */
    public function setImageUri(string $imageUri): void
    {
        $this->imageUri = $imageUri;
    }

    /**
     * Returns Creation Date.
     * Entity creation date
     */
    public function getCreationDate(): string
    {
        return $this->creationDate;
    }

    /**
     * Sets Creation Date.
     * Entity creation date
     *
     * @required
     * @maps creationDate
     */
    public function setCreationDate(string $creationDate): void
    {
        $this->creationDate = $creationDate;
    }

    /**
     * Returns Public.
     * API Status (Deprecated)
     */
    public function getPublic(): bool
    {
        return $this->public;
    }

    /**
     * Sets Public.
     * API Status (Deprecated)
     *
     * @required
     * @maps public
     */
    public function setPublic(bool $public): void
    {
        $this->public = $public;
    }

    /**
     * Returns Name.
     * API Entity  Name
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * API Entity  Name
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Description.
     * Description of the API
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Description of the API
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Version.
     * Entity Version Number
     */
    public function getVersion(): string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     * Entity Version Number
     *
     * @required
     * @maps version
     */
    public function setVersion(string $version): void
    {
        $this->version = $version;
    }

    /**
     * Returns Additional Headers.
     * Header Content
     *
     * @return string[]
     */
    public function getAdditionalHeaders(): array
    {
        return $this->additionalHeaders;
    }

    /**
     * Sets Additional Headers.
     * Header Content
     *
     * @required
     * @maps additionalHeaders
     *
     * @param string[] $additionalHeaders
     */
    public function setAdditionalHeaders(array $additionalHeaders): void
    {
        $this->additionalHeaders = $additionalHeaders;
    }

    /**
     * Returns Authentication.
     * This Structure encapsulates all details of API authentication.
     */
    public function getAuthentication(): Authentication
    {
        return $this->authentication;
    }

    /**
     * Sets Authentication.
     * This Structure encapsulates all details of API authentication.
     *
     * @required
     * @maps authentication
     */
    public function setAuthentication(Authentication $authentication): void
    {
        $this->authentication = $authentication;
    }

    /**
     * Returns Code Gen Settings.
     * APIMatic’s code generation engine has various code generation configurations to customise the
     * behaviour and outlook across the generated SDKS. This structure encapsulates all settings for
     * CodeGeneration.
     */
    public function getCodeGenSettings(): CodeGenSettings
    {
        return $this->codeGenSettings;
    }

    /**
     * Sets Code Gen Settings.
     * APIMatic’s code generation engine has various code generation configurations to customise the
     * behaviour and outlook across the generated SDKS. This structure encapsulates all settings for
     * CodeGeneration.
     *
     * @required
     * @maps codeGenSettings
     */
    public function setCodeGenSettings(CodeGenSettings $codeGenSettings): void
    {
        $this->codeGenSettings = $codeGenSettings;
    }

    /**
     * Returns Test Gen Settings.
     * This structure helps specify additional test configurations which affects how test cases are
     * generated.
     */
    public function getTestGenSettings(): TestGenSettings
    {
        return $this->testGenSettings;
    }

    /**
     * Sets Test Gen Settings.
     * This structure helps specify additional test configurations which affects how test cases are
     * generated.
     *
     * @required
     * @maps testGenSettings
     */
    public function setTestGenSettings(TestGenSettings $testGenSettings): void
    {
        $this->testGenSettings = $testGenSettings;
    }

    /**
     * Returns Errors.
     * API Errors
     *
     * @return string[]
     */
    public function getErrors(): array
    {
        return $this->errors;
    }

    /**
     * Sets Errors.
     * API Errors
     *
     * @required
     * @maps errors
     *
     * @param string[] $errors
     */
    public function setErrors(array $errors): void
    {
        $this->errors = $errors;
    }

    /**
     * Returns Server Configuration.
     * Server configurations can be used to create multiple environments, multiple servers that can be used
     * with specific endpoints and server URLs with template paramters.
     */
    public function getServerConfiguration(): ServerConfiguration
    {
        return $this->serverConfiguration;
    }

    /**
     * Sets Server Configuration.
     * Server configurations can be used to create multiple environments, multiple servers that can be used
     * with specific endpoints and server URLs with template paramters.
     *
     * @required
     * @maps serverConfiguration
     */
    public function setServerConfiguration(ServerConfiguration $serverConfiguration): void
    {
        $this->serverConfiguration = $serverConfiguration;
    }

    /**
     * Returns Endpoints Group.
     * API Endpoint Groups
     *
     * @return EndpointsGroup[]
     */
    public function getEndpointsGroup(): array
    {
        return $this->endpointsGroup;
    }

    /**
     * Sets Endpoints Group.
     * API Endpoint Groups
     *
     * @required
     * @maps endpointsGroup
     *
     * @param EndpointsGroup[] $endpointsGroup
     */
    public function setEndpointsGroup(array $endpointsGroup): void
    {
        $this->endpointsGroup = $endpointsGroup;
    }

    /**
     * Returns Meta Data.
     */
    public function getMetaData(): MetaData
    {
        return $this->metaData;
    }

    /**
     * Sets Meta Data.
     *
     * @required
     * @maps metaData
     */
    public function setMetaData(MetaData $metaData): void
    {
        $this->metaData = $metaData;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']                  = $this->id;
        $json['encryptedId']         = $this->encryptedId;
        $json['apiKey']              = $this->apiKey;
        $json['apiGroupId']          = $this->apiGroupId;
        $json['imageUri']            = $this->imageUri;
        $json['creationDate']        = $this->creationDate;
        $json['public']              = $this->public;
        $json['name']                = $this->name;
        $json['description']         = $this->description;
        $json['version']             = $this->version;
        $json['additionalHeaders']   = $this->additionalHeaders;
        $json['authentication']      = $this->authentication;
        $json['codeGenSettings']     = $this->codeGenSettings;
        $json['testGenSettings']     = $this->testGenSettings;
        $json['errors']              = $this->errors;
        $json['serverConfiguration'] = $this->serverConfiguration;
        $json['endpointsGroup']      = $this->endpointsGroup;
        $json['metaData']            = $this->metaData;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
