<?php

declare(strict_types=1);

/*
 * ApimaticAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApimaticAPILib\Models;

use stdClass;

class UserCodeGenerationRequirements implements \JsonSerializable
{
    /**
     * @var string
     */
    private $userId;

    /**
     * @var string
     */
    private $inputFile;

    /**
     * @param string $userId
     * @param string $inputFile
     */
    public function __construct(string $userId, string $inputFile)
    {
        $this->userId = $userId;
        $this->inputFile = $inputFile;
    }

    /**
     * Returns User Id.
     * Unique User Identifier
     */
    public function getUserId(): string
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     * Unique User Identifier
     *
     * @required
     * @maps userId
     */
    public function setUserId(string $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Returns Input File.
     * API Specification file in a supported format
     */
    public function getInputFile(): string
    {
        return $this->inputFile;
    }

    /**
     * Sets Input File.
     * API Specification file in a supported format
     *
     * @required
     * @maps inputFile
     */
    public function setInputFile(string $inputFile): void
    {
        $this->inputFile = $inputFile;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['userId']    = $this->userId;
        $json['inputFile'] = $this->inputFile;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
