<?php

declare(strict_types=1);

/*
 * ApimaticAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApimaticAPILib\Models;

use stdClass;

class ApiValidationSummary implements \JsonSerializable
{
    /**
     * @var bool
     */
    private $success;

    /**
     * @var string[]
     */
    private $errors;

    /**
     * @var string[]
     */
    private $warnings;

    /**
     * @var string[]
     */
    private $messages;

    /**
     * @param bool $success
     * @param string[] $errors
     * @param string[] $warnings
     * @param string[] $messages
     */
    public function __construct(bool $success, array $errors, array $warnings, array $messages)
    {
        $this->success = $success;
        $this->errors = $errors;
        $this->warnings = $warnings;
        $this->messages = $messages;
    }

    /**
     * Returns Success.
     */
    public function getSuccess(): bool
    {
        return $this->success;
    }

    /**
     * Sets Success.
     *
     * @required
     * @maps success
     */
    public function setSuccess(bool $success): void
    {
        $this->success = $success;
    }

    /**
     * Returns Errors.
     *
     * @return string[]
     */
    public function getErrors(): array
    {
        return $this->errors;
    }

    /**
     * Sets Errors.
     *
     * @required
     * @maps errors
     *
     * @param string[] $errors
     */
    public function setErrors(array $errors): void
    {
        $this->errors = $errors;
    }

    /**
     * Returns Warnings.
     *
     * @return string[]
     */
    public function getWarnings(): array
    {
        return $this->warnings;
    }

    /**
     * Sets Warnings.
     *
     * @required
     * @maps warnings
     *
     * @param string[] $warnings
     */
    public function setWarnings(array $warnings): void
    {
        $this->warnings = $warnings;
    }

    /**
     * Returns Messages.
     *
     * @return string[]
     */
    public function getMessages(): array
    {
        return $this->messages;
    }

    /**
     * Sets Messages.
     *
     * @required
     * @maps messages
     *
     * @param string[] $messages
     */
    public function setMessages(array $messages): void
    {
        $this->messages = $messages;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['success']  = $this->success;
        $json['errors']   = $this->errors;
        $json['warnings'] = $this->warnings;
        $json['messages'] = $this->messages;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
