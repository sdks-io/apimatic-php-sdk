<?php

declare(strict_types=1);

/*
 * ApimaticAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApimaticAPILib\Models;

use stdClass;

/**
 * This structure helps specify additional test configurations which affects how test cases are
 * generated.
 */
class TestGenSettings implements \JsonSerializable
{
    /**
     * @var float
     */
    private $precisionDelta;

    /**
     * @var int
     */
    private $testTimeout;

    /**
     * @var array
     */
    private $configuration;

    /**
     * @param float $precisionDelta
     * @param int $testTimeout
     * @param array $configuration
     */
    public function __construct(float $precisionDelta, int $testTimeout, array $configuration)
    {
        $this->precisionDelta = $precisionDelta;
        $this->testTimeout = $testTimeout;
        $this->configuration = $configuration;
    }

    /**
     * Returns Precision Delta.
     * Error margin for comparing values in decimal places
     */
    public function getPrecisionDelta(): float
    {
        return $this->precisionDelta;
    }

    /**
     * Sets Precision Delta.
     * Error margin for comparing values in decimal places
     *
     * @required
     * @maps precisionDelta
     */
    public function setPrecisionDelta(float $precisionDelta): void
    {
        $this->precisionDelta = $precisionDelta;
    }

    /**
     * Returns Test Timeout.
     * Number of seconds after which if the endpoint is not returning any response, the test is forced to
     * fail e.g. a timeout of 60
     */
    public function getTestTimeout(): int
    {
        return $this->testTimeout;
    }

    /**
     * Sets Test Timeout.
     * Number of seconds after which if the endpoint is not returning any response, the test is forced to
     * fail e.g. a timeout of 60
     *
     * @required
     * @maps testTimeout
     */
    public function setTestTimeout(int $testTimeout): void
    {
        $this->testTimeout = $testTimeout;
    }

    /**
     * Returns Configuration.
     * The parameters allows to provide values for configuration file for use in the test environment
     */
    public function getConfiguration(): array
    {
        return $this->configuration;
    }

    /**
     * Sets Configuration.
     * The parameters allows to provide values for configuration file for use in the test environment
     *
     * @required
     * @maps configuration
     */
    public function setConfiguration(array $configuration): void
    {
        $this->configuration = $configuration;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['precisionDelta'] = $this->precisionDelta;
        $json['testTimeout']    = $this->testTimeout;
        $json['configuration']  = $this->configuration;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
