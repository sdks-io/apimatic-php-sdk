<?php

declare(strict_types=1);

/*
 * ApimaticAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApimaticAPILib\Models;

use stdClass;

/**
 * This structure contains details of importing a new API Version
 */
class ImportApiVersionViaUrlRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $versionOverride;

    /**
     * @var string
     */
    private $url;

    /**
     * @param string $versionOverride
     * @param string $url
     */
    public function __construct(string $versionOverride, string $url)
    {
        $this->versionOverride = $versionOverride;
        $this->url = $url;
    }

    /**
     * Returns Version Override.
     * The version number with which the new API version will be imported. This version number will
     * override the version specified in the API specification file.<br>APIMatic recommends versioning the
     * API with the [versioning scheme](https://docs.apimatic.io/define-apis/basic-settings/#version)
     * documented in the docs.
     */
    public function getVersionOverride(): string
    {
        return $this->versionOverride;
    }

    /**
     * Sets Version Override.
     * The version number with which the new API version will be imported. This version number will
     * override the version specified in the API specification file.<br>APIMatic recommends versioning the
     * API with the [versioning scheme](https://docs.apimatic.io/define-apis/basic-settings/#version)
     * documented in the docs.
     *
     * @required
     * @maps version_override
     */
    public function setVersionOverride(string $versionOverride): void
    {
        $this->versionOverride = $versionOverride;
    }

    /**
     * Returns Url.
     * The URL for the API specification file.<br><br>**Note:** This URL should be publicly accessible.
     */
    public function getUrl(): string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     * The URL for the API specification file.<br><br>**Note:** This URL should be publicly accessible.
     *
     * @required
     * @maps url
     */
    public function setUrl(string $url): void
    {
        $this->url = $url;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['version_override'] = $this->versionOverride;
        $json['url']              = $this->url;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
