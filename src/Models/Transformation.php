<?php

declare(strict_types=1);

/*
 * ApimaticAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApimaticAPILib\Models;

use stdClass;

/**
 * Transformation structure encapsulates all the details of a Transformation.
 */
class Transformation implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var string
     */
    private $transformedOn;

    /**
     * @var string
     */
    private $userId;

    /**
     * @var string
     */
    private $inputtedFile;

    /**
     * @var string
     */
    private $generatedFile;

    /**
     * @var string
     */
    private $exportFormat;

    /**
     * @var string
     */
    private $transformationSource;

    /**
     * @var string
     */
    private $transformationInput;

    /**
     * @var string
     */
    private $codeGenVersion;

    /**
     * @var bool
     */
    private $success;

    /**
     * @var ApiValidationSummary
     */
    private $importSummary;

    /**
     * @var ApiValidationSummary
     */
    private $apiValidationSummary;

    /**
     * @param string $id
     * @param string $transformedOn
     * @param string $userId
     * @param string $inputtedFile
     * @param string $generatedFile
     * @param string $exportFormat
     * @param string $transformationSource
     * @param string $transformationInput
     * @param string $codeGenVersion
     * @param bool $success
     * @param ApiValidationSummary $importSummary
     * @param ApiValidationSummary $apiValidationSummary
     */
    public function __construct(
        string $id,
        string $transformedOn,
        string $userId,
        string $inputtedFile,
        string $generatedFile,
        string $exportFormat,
        string $transformationSource,
        string $transformationInput,
        string $codeGenVersion,
        bool $success,
        ApiValidationSummary $importSummary,
        ApiValidationSummary $apiValidationSummary
    ) {
        $this->id = $id;
        $this->transformedOn = $transformedOn;
        $this->userId = $userId;
        $this->inputtedFile = $inputtedFile;
        $this->generatedFile = $generatedFile;
        $this->exportFormat = $exportFormat;
        $this->transformationSource = $transformationSource;
        $this->transformationInput = $transformationInput;
        $this->codeGenVersion = $codeGenVersion;
        $this->success = $success;
        $this->importSummary = $importSummary;
        $this->apiValidationSummary = $apiValidationSummary;
    }

    /**
     * Returns Id.
     * Unique Transformation Identifier
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Unique Transformation Identifier
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Transformed On.
     * Transformation Date and Time
     */
    public function getTransformedOn(): string
    {
        return $this->transformedOn;
    }

    /**
     * Sets Transformed On.
     * Transformation Date and Time
     *
     * @required
     * @maps transformedOn
     */
    public function setTransformedOn(string $transformedOn): void
    {
        $this->transformedOn = $transformedOn;
    }

    /**
     * Returns User Id.
     * Unique User Identifier
     */
    public function getUserId(): string
    {
        return $this->userId;
    }

    /**
     * Sets User Id.
     * Unique User Identifier
     *
     * @required
     * @maps userId
     */
    public function setUserId(string $userId): void
    {
        $this->userId = $userId;
    }

    /**
     * Returns Inputted File.
     * API Specification file to be transformed
     */
    public function getInputtedFile(): string
    {
        return $this->inputtedFile;
    }

    /**
     * Sets Inputted File.
     * API Specification file to be transformed
     *
     * @required
     * @maps inputtedFile
     */
    public function setInputtedFile(string $inputtedFile): void
    {
        $this->inputtedFile = $inputtedFile;
    }

    /**
     * Returns Generated File.
     * API Specification file transformed to desired format
     */
    public function getGeneratedFile(): string
    {
        return $this->generatedFile;
    }

    /**
     * Sets Generated File.
     * API Specification file transformed to desired format
     *
     * @required
     * @maps generatedFile
     */
    public function setGeneratedFile(string $generatedFile): void
    {
        $this->generatedFile = $generatedFile;
    }

    /**
     * Returns Export Format.
     * Desired Specification format
     */
    public function getExportFormat(): string
    {
        return $this->exportFormat;
    }

    /**
     * Sets Export Format.
     * Desired Specification format
     *
     * @required
     * @maps exportFormat
     */
    public function setExportFormat(string $exportFormat): void
    {
        $this->exportFormat = $exportFormat;
    }

    /**
     * Returns Transformation Source.
     * Source of Transformation
     */
    public function getTransformationSource(): string
    {
        return $this->transformationSource;
    }

    /**
     * Sets Transformation Source.
     * Source of Transformation
     *
     * @required
     * @maps transformationSource
     */
    public function setTransformationSource(string $transformationSource): void
    {
        $this->transformationSource = $transformationSource;
    }

    /**
     * Returns Transformation Input.
     * Via File or URL
     */
    public function getTransformationInput(): string
    {
        return $this->transformationInput;
    }

    /**
     * Sets Transformation Input.
     * Via File or URL
     *
     * @required
     * @maps transformationInput
     */
    public function setTransformationInput(string $transformationInput): void
    {
        $this->transformationInput = $transformationInput;
    }

    /**
     * Returns Code Gen Version.
     * CodeGen Engine Version
     */
    public function getCodeGenVersion(): string
    {
        return $this->codeGenVersion;
    }

    /**
     * Sets Code Gen Version.
     * CodeGen Engine Version
     *
     * @required
     * @maps codeGenVersion
     */
    public function setCodeGenVersion(string $codeGenVersion): void
    {
        $this->codeGenVersion = $codeGenVersion;
    }

    /**
     * Returns Success.
     * Successful Transformation Flag
     */
    public function getSuccess(): bool
    {
        return $this->success;
    }

    /**
     * Sets Success.
     * Successful Transformation Flag
     *
     * @required
     * @maps success
     */
    public function setSuccess(bool $success): void
    {
        $this->success = $success;
    }

    /**
     * Returns Import Summary.
     */
    public function getImportSummary(): ApiValidationSummary
    {
        return $this->importSummary;
    }

    /**
     * Sets Import Summary.
     *
     * @required
     * @maps importSummary
     */
    public function setImportSummary(ApiValidationSummary $importSummary): void
    {
        $this->importSummary = $importSummary;
    }

    /**
     * Returns Api Validation Summary.
     */
    public function getApiValidationSummary(): ApiValidationSummary
    {
        return $this->apiValidationSummary;
    }

    /**
     * Sets Api Validation Summary.
     *
     * @required
     * @maps apiValidationSummary
     */
    public function setApiValidationSummary(ApiValidationSummary $apiValidationSummary): void
    {
        $this->apiValidationSummary = $apiValidationSummary;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']                   = $this->id;
        $json['transformedOn']        = $this->transformedOn;
        $json['userId']               = $this->userId;
        $json['inputtedFile']         = $this->inputtedFile;
        $json['generatedFile']        = $this->generatedFile;
        $json['exportFormat']         = $this->exportFormat;
        $json['transformationSource'] = $this->transformationSource;
        $json['transformationInput']  = $this->transformationInput;
        $json['codeGenVersion']       = $this->codeGenVersion;
        $json['success']              = $this->success;
        $json['importSummary']        = $this->importSummary;
        $json['apiValidationSummary'] = $this->apiValidationSummary;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
