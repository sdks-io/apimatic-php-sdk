<?php

declare(strict_types=1);

/*
 * ApimaticAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApimaticAPILib\Controllers;

use ApimaticAPILib\Exceptions\ApiException;
use ApimaticAPILib\Models\GenerateSdkViaUrlRequest;
use ApimaticAPILib\Models\Platforms;
use ApimaticAPILib\Models\UserCodeGeneration;
use ApimaticAPILib\Utils\FileWrapper;
use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\FormParam;
use Core\Request\Parameters\HeaderParam;
use Core\Request\Parameters\TemplateParam;
use CoreInterfaces\Core\Request\RequestMethod;

class CodeGenerationExternalApisController extends BaseController
{
    /**
     * Generate an SDK for an API by by uploading the API specification file.
     *
     * This endpoint generates and then uploads the generated SDK to APIMatic's cloud storage. An ID for
     * the generation performed is returned as part of the response.
     *
     * This endpoint does not import an API into APIMatic.
     *
     * @param FileWrapper $file The API specification file.<br>The type of the specification file
     *        should be any of the [supported formats](https://docs.apimatic.io/api-
     *        transformer/overview-transformer#supported-input-formats).
     * @param string $template The structure contains platforms that APIMatic CodeGen can generate
     *        SDKs and Docs in.
     *
     * @return UserCodeGeneration Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function generateSDKViaFile(FileWrapper $file, string $template): UserCodeGeneration
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/code-generations/generate-via-file')
            ->auth('Authorization')
            ->parameters(
                FormParam::init('file', $file),
                FormParam::init('template', $template)->serializeBy([Platforms::class, 'checkValue'])
            );

        $_resHandler = $this->responseHandler()->type(UserCodeGeneration::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Generate an SDK for an API by providing the URL of the API specification file.
     *
     * This endpoint generates and then uploads the generated SDK to APIMatic's cloud storage. An ID for
     * the generation performed is returned as part of the response.
     *
     * This endpoint does not import an API into APIMatic.
     *
     * @param GenerateSdkViaUrlRequest $body Request Body
     *
     * @return UserCodeGeneration Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function generateSDKViaURL(GenerateSdkViaUrlRequest $body): UserCodeGeneration
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/code-generations/generate-via-url')
            ->auth('Authorization')
            ->parameters(
                HeaderParam::init('Content-Type', 'application/vnd.apimatic.userCodeGenerationDto.v1+json'),
                BodyParam::init($body)
            );

        $_resHandler = $this->responseHandler()->type(UserCodeGeneration::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Download the SDK generated via the Generate SDK endpoints.
     *
     * @param string $codegenId The ID of code generation received in the response of the [Generate
     *        SDK Via File](https://www.apimatic.io/api-docs-
     *        preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-
     *        external-apis/generate-sdk-via-file) or [Generate SDK Via URL ](https://www.apimatic.
     *        io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *        endpoints/code-generation-external-apis/generate-sdk-via-url) calls.
     *
     * @return string Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function downloadGeneratedSDK(string $codegenId): string
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/code-generations/{codegen_id}/generated-sdk')
            ->auth('Authorization')
            ->parameters(TemplateParam::init('codegen_id', $codegenId));

        return $this->execute($_reqBuilder);
    }

    /**
     * Get a list of all SDK generations performed with external APIs via the Generate SDK endpoints.
     *
     * @return UserCodeGeneration[] Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function listAllCodeGenerationsExternal(): array
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/code-generations')->auth('Authorization');

        $_resHandler = $this->responseHandler()->type(UserCodeGeneration::class, 1);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Download the API Specification file used as input for a specific SDK generation performed via the
     * Generate SDK endpoints.
     *
     * @param string $codegenId The ID of the code generation to download the API specification for.
     *        The code generation ID is received in the response of the [Generate SDK Via
     *        File](https://www.apimatic.io/api-docs-
     *        preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-
     *        external-apis/generate-sdk-via-file) or [Generate SDK Via URL ](https://www.apimatic.
     *        io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *        endpoints/code-generation-external-apis/generate-sdk-via-url) calls
     *
     * @return string Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function downloadInputFileCodegen(string $codegenId): string
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/code-generations/{codegen_id}/input-file')
            ->auth('Authorization')
            ->parameters(TemplateParam::init('codegen_id', $codegenId));

        return $this->execute($_reqBuilder);
    }

    /**
     * Get details on an SDK generation performed for an external API via the Generate SDK endpoints.
     *
     * @param string $codegenId The ID of the code generation to fetch. The code generation ID is
     *        received in the response of the [Generate SDK Via File](https://www.apimatic.io/api-
     *        docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-
     *        generation-external-apis/generate-sdk-via-file) or [Generate SDK Via URL ](https:
     *        //www.apimatic.io/api-docs-
     *        preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-
     *        external-apis/generate-sdk-via-url) calls.
     *
     * @return UserCodeGeneration Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function getACodeGenerationCodegen(string $codegenId): UserCodeGeneration
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/code-generations/{codegen_id}')
            ->auth('Authorization')
            ->parameters(TemplateParam::init('codegen_id', $codegenId));

        $_resHandler = $this->responseHandler()->type(UserCodeGeneration::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Delete an SDK generation performed for an API via the Generate SDK endpoints.
     *
     * @param string $codegenId The ID of the code generation to delete. The code generation ID is
     *        received in the response of the [Generate SDK Via File](https://www.apimatic.io/api-
     *        docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-
     *        generation-external-apis/generate-sdk-via-file) or [Generate SDK Via URL ](https:
     *        //www.apimatic.io/api-docs-
     *        preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-
     *        external-apis/generate-sdk-via-url) calls.
     *
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function deleteCodeGeneration1(string $codegenId): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::DELETE, '/code-generations/{codegen_id}')
            ->auth('Authorization')
            ->parameters(TemplateParam::init('codegen_id', $codegenId));

        $this->execute($_reqBuilder);
    }
}
