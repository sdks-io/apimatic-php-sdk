<?php

declare(strict_types=1);

/*
 * ApimaticAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApimaticAPILib\Tests\Controllers;

use ApimaticAPILib\Controllers\DocsPortalManagementController;
use ApimaticAPILib\Exceptions;

class DocsPortalManagementControllerTest extends BaseTestController
{
    /**
     * @var DocsPortalManagementController DocsPortalManagementController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getDocsPortalManagementController();
    }

    public function testPublishHostedPortal()
    {
        // Parameters for the API call
        $apiEntityId = '5f87f8ab9615d38a2eb990ca';

        // Perform API call
        try {
            self::$controller->publishHostedPortal($apiEntityId);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testPublishEmbeddedPortal()
    {
        // Parameters for the API call
        $apiEntityId = '5f87f8ab9615d38a2eb990ca';

        // Perform API call
        try {
            self::$controller->publishEmbeddedPortal($apiEntityId);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testGenerateOnPremPortalViaAPIEntity()
    {
        // Parameters for the API call
        $apiEntityId = '5f87f8ab9615d38a2eb990ca';

        // Perform API call
        try {
            self::$controller->generateOnPremPortalViaAPIEntity($apiEntityId);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testUnpublishPortal()
    {
        // Parameters for the API call
        $apiEntityId = '5f87f8ab9615d38a2eb990ca';

        // Perform API call
        try {
            self::$controller->unpublishPortal($apiEntityId);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }
}
